1. Divide a matrix module
=========================
Function
========.
Function  that divides all elements of a matrix.

Operations
==========
All elements of the matrix should be divided by div, rounded to 2 decimal places

import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Cases:

Call function without arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Call function with more than two arguments:
    >>> matrix_divided(1, 4, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Call function with one arguments:
    >>> matrix_divided(5)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Divide a matrix with a type different of a list:
    >>> matrix = ((10, 5), (8, 4))
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divide by Zero:
    >>> matrix_divided ([[1,2,3], [4,5,6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Divide with integer:
    >>> matrix_divided ([[1,2,3], [4,5,6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Divide with float:
    >>> matrix_divided ([[1,2,3], [4,5,6]], 2.5)
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Divide matrix with integers negatives:
    >>> matrix_divided ([[2, 1, 3], [4, 5, 6]], -2)
    [[-1.0, -0.5, -1.5], [-2.0, -2.5, -3.0]]

Divide matrix with floats negatives:
    >>> matrix_divided ([[2, 1, 3], [4, 5, 6]], -2.5)
    [[-0.8, -0.4, -1.2], [-1.6, -2.0, -2.4]]

Divide by inf
    >>> matrix_divided ([[2, 1, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Divide matrix with list of not integers or floats:
    >>> matrix_divided ([[2, 1], ["H", 5, 3]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Divide with another type than int or float:
    >>> matrix_divided ([[1,2,3], [4,5,6]], '2')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Divide with 1 element:
    >>> matrix_divided ([1], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divide with None:
    >>> matrix_divided ([[2, 1, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Checking by a matrix with 1 element:
    >>> matrix_divided ([[1]], 3)
    [[0.33]]

Check empty matrix:
    >>> matrix_divided ([], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
